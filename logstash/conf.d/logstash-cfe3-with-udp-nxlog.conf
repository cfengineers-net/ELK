input {

 udp {
  type => "test_cfe3_syslog"
  port => 5140
 }

 udp {
  type => "test_cfe3_promise_summary"
  port => 5141
 }

 udp {
  type => "test_cfe3_software_packages"
  port => 5142
 }

}

filter {

 # Need patterns/cfengine3
 if [type] == "test_cfe3_syslog" {
  grok {
   match => [ "message", "%{CFESYSLOGBASE} %{GREEDYDATA:cfe_syslog_message}" ]
   add_field => [ "received_at", "%{@timestamp}" ]
   add_field => [ "received_from", "%{host}" ]
  }
  if "_grokparsefailure" in [tags] {
   drop { }
  }
 }

 if [type] == "test_cfe3_promise_summary" {
  grok {
   match => [ "message", "%{NUMBER:start_epoch_time},%{NUMBER:stop_epoch_time}: %{GREEDYDATA:promise_summary_message}" ]
   add_field => [ "received_at", "%{@timestamp}" ]
   add_field => [ "received_from", "%{host}" ]
  }
 }

 if [type] == "test_cfe3_software_packages" {
  grok {
   match => [ "message", "%{DATA:pkg_name},%{DATA:pkg_version},%{WORD:pkg_arch},%{WORD:pkg_manager}" ]
   add_field => [ "received_at", "%{@timestamp}" ]
   add_field => [ "received_from", "%{host}" ]
  }
 }

}

output {

 stdout { codec => rubydebug }
 elasticsearch { host => localhost }  # assume that ES and Logstash on the same server

}
